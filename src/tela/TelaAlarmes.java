/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tela;

import connection.Conexao.rs;
import controller.ControllerEquipamento;
import controller.ControllerAlarme;
import dao.DAOAlarme;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.ModelEquipamento;
import model.ModelAlarme;
import util.Datas;
import util.Formatador;
import java.math.RoundingMode;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;


/**
 *
 * @author igork
 */
public class TelaAlarmes extends javax.swing.JFrame {

    ArrayList<ModelEquipamento> listaModelEquipamento = new ArrayList<>();
    ArrayList<ModelAlarme> listaModelAlarme = new ArrayList<>();
    ControllerEquipamento controllerEquipamento = new ControllerEquipamento();
    ControllerAlarme controllerAlarme = new ControllerAlarme();
    ModelEquipamento modelEquipamento = new ModelEquipamento();
    ModelAlarme modelAlarme = new ModelAlarme();
    String salvarAlteracao;
    Datas datas = new Datas();
    
    /**
     * Creates new form TelaAlarmes
     */
    
    public TelaAlarmes() { //chamando todas as funções iniciais do programa
        initComponents();
        setLocationRelativeTo(null);//centralizar a tela no monitor
        listarEquipamento();
        carregarAlarme();
        centralizarColunas();
        bloquearColunas();
        limparcampos();
        preencherCodigoEquipamento();
        jbAlarmeSalvar.setEnabled(false);
        jtAlarmeTabela.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jcAlarmeClassificao.setEnabled(false);
        jcNomeEquipamento.setEnabled(false);
        jtfAlarmeDescricao.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlEquipamentoDescricao = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jbAlarmeExcluir = new javax.swing.JButton();
        jlEquipamentoTamanho = new javax.swing.JLabel();
        jcNomeEquipamento = new componentes.UJComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtAlarmeTabela = new javax.swing.JTable();
        jcAlarmeClassificao = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jtfAlarmePesquisar = new javax.swing.JTextField();
        jbAlarmeVoltar = new javax.swing.JButton();
        jbAlarmeAlterar = new javax.swing.JButton();
        jtfAlarmeDescricao = new javax.swing.JTextField();
        jbAlarmePesquisar = new javax.swing.JButton();
        jlEquipamentoCodigo1 = new javax.swing.JLabel();
        jtfEquipamentoCodigo = new javax.swing.JTextField();
        jbAlarmeSalvar = new javax.swing.JButton();
        jbAlarmeNovo = new javax.swing.JButton();
        jbAlarmeCancelar = new javax.swing.JButton();
        jlEquipamentoCodigo = new javax.swing.JLabel();
        jtfAlarmeCodigo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jlEquipamentoDescricao.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jlEquipamentoDescricao.setForeground(new java.awt.Color(255, 255, 255));
        jlEquipamentoDescricao.setText("Equipamento para o alarme:");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Descrição:");

        jbAlarmeExcluir.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbAlarmeExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/excluir (1).png"))); // NOI18N
        jbAlarmeExcluir.setText("Excluir");
        jbAlarmeExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlarmeExcluirActionPerformed(evt);
            }
        });

        jlEquipamentoTamanho.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jlEquipamentoTamanho.setForeground(new java.awt.Color(255, 255, 255));
        jlEquipamentoTamanho.setText("Classificação:");

        jcNomeEquipamento.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcNomeEquipamentoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jcNomeEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcNomeEquipamentoActionPerformed(evt);
            }
        });

        jtAlarmeTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cod. Alarme", "Equipamento", "Descrição", "Classificação", "Cadastro"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtAlarmeTabela);

        jcAlarmeClassificao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Baixo", "Médio", "Alto", " " }));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Pesquisar descrição");

        jtfAlarmePesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfAlarmePesquisarActionPerformed(evt);
            }
        });

        jbAlarmeVoltar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbAlarmeVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/de-volta (1).png"))); // NOI18N
        jbAlarmeVoltar.setText("Voltar");
        jbAlarmeVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlarmeVoltarActionPerformed(evt);
            }
        });

        jbAlarmeAlterar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbAlarmeAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/lapis (1).png"))); // NOI18N
        jbAlarmeAlterar.setText("Alterar");
        jbAlarmeAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlarmeAlterarActionPerformed(evt);
            }
        });

        jtfAlarmeDescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfAlarmeDescricaoActionPerformed(evt);
            }
        });

        jbAlarmePesquisar.setText("Pesquisar");
        jbAlarmePesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlarmePesquisarActionPerformed(evt);
            }
        });

        jlEquipamentoCodigo1.setBackground(new java.awt.Color(0, 0, 0));
        jlEquipamentoCodigo1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jlEquipamentoCodigo1.setForeground(new java.awt.Color(255, 255, 255));
        jlEquipamentoCodigo1.setText("Cód. Equip.");

        jtfEquipamentoCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfEquipamentoCodigoFocusLost(evt);
            }
        });
        jtfEquipamentoCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEquipamentoCodigoActionPerformed(evt);
            }
        });

        jbAlarmeSalvar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbAlarmeSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/salve- (1).png"))); // NOI18N
        jbAlarmeSalvar.setText("Salvar");
        jbAlarmeSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlarmeSalvarActionPerformed(evt);
            }
        });

        jbAlarmeNovo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbAlarmeNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/novo-documento (1).png"))); // NOI18N
        jbAlarmeNovo.setText("Novo");
        jbAlarmeNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlarmeNovoActionPerformed(evt);
            }
        });

        jbAlarmeCancelar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbAlarmeCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/cancelar (1).png"))); // NOI18N
        jbAlarmeCancelar.setText("Cancelar");
        jbAlarmeCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlarmeCancelarActionPerformed(evt);
            }
        });

        jlEquipamentoCodigo.setBackground(new java.awt.Color(0, 0, 0));
        jlEquipamentoCodigo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jlEquipamentoCodigo.setForeground(new java.awt.Color(255, 255, 255));
        jlEquipamentoCodigo.setText("Cód. Alarme");

        jtfAlarmeCodigo.setEditable(false);
        jtfAlarmeCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfAlarmeCodigoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jtfAlarmeCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jlEquipamentoCodigo, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jlEquipamentoCodigo1)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jtfEquipamentoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jcNomeEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jlEquipamentoDescricao)))
                                    .addComponent(jtfAlarmePesquisar))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jbAlarmePesquisar)
                                    .addComponent(jLabel1)
                                    .addComponent(jtfAlarmeDescricao)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 555, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlEquipamentoTamanho)
                                    .addComponent(jcAlarmeClassificao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(74, 74, 74))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jbAlarmeVoltar)
                        .addGap(18, 18, 18)
                        .addComponent(jbAlarmeCancelar)
                        .addGap(18, 18, 18)
                        .addComponent(jbAlarmeExcluir)
                        .addGap(18, 18, 18)
                        .addComponent(jbAlarmeAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbAlarmeNovo)
                        .addGap(18, 18, 18)
                        .addComponent(jbAlarmeSalvar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jlEquipamentoDescricao))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jlEquipamentoCodigo)
                        .addComponent(jlEquipamentoCodigo1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfAlarmeCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfAlarmeDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcNomeEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfEquipamentoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jlEquipamentoTamanho))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfAlarmePesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlarmePesquisar)
                    .addComponent(jcAlarmeClassificao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAlarmeVoltar)
                    .addComponent(jbAlarmeCancelar)
                    .addComponent(jbAlarmeExcluir)
                    .addComponent(jbAlarmeAlterar)
                    .addComponent(jbAlarmeSalvar)
                    .addComponent(jbAlarmeNovo))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void centralizarColunas(){//Centraliza o texto das colunas
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();        
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        jtAlarmeTabela.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jtAlarmeTabela.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jtAlarmeTabela.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jtAlarmeTabela.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        jtAlarmeTabela.getColumnModel().getColumn(4).setCellRenderer(centralizado);
    ((DefaultTableCellRenderer) jtAlarmeTabela.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
    }
    
    public void preencherCodigoEquipamento(){ //Preenche o codigo do equipamento para conseguir salvar no banco de dados do alarme como chave estrangeira
        modelEquipamento = controllerEquipamento.getEquipamentoController(jcNomeEquipamento.getSelectedItem().toString());
        jtfEquipamentoCodigo.setText(String.valueOf(modelEquipamento.getIdEquipamento()));
    }
    
    private void listarEquipamento(){ //preenche o ComboBox com os equipamentos
            listaModelEquipamento = controllerEquipamento.getListaEquipamentoController();
            jcNomeEquipamento.removeAllItems();
            for (int i = 0; i < listaModelEquipamento.size(); i++) {
            jcNomeEquipamento.addItem(listaModelEquipamento.get(i).getEquipamento_nome());

        }
    }   
    
    private void limparcampos(){ //Limpa o campo de texto
        jtfAlarmeDescricao.setText("");
  
            
    }
    private void habilitarCampos(boolean condicao){//Habilita os botões/combo box de acordo com a condição
        
    }
    
        private void carregarAlarme(){//carrega os alarmes na tabela
        listaModelAlarme = controllerAlarme.getListaAlarmeController();
        listaModelEquipamento = controllerEquipamento.getListaEquipamentoController();
        DefaultTableModel model = (DefaultTableModel) jtAlarmeTabela.getModel();
        model.setNumRows(0); 
        int contador = listaModelAlarme.size();
        for (int i = 0; i < contador; i++) {
            model.addRow(new Object[]{
                listaModelAlarme.get(i).getIdAlarme(), 
                //listaModelEquipamento.get(i).getEquipamento_nome(),
                listaModelAlarme.get(i).getFk_equipamento(),
                listaModelAlarme.get(i).getAlarme_descricao(),  
                listaModelAlarme.get(i).getAlarme_classificao(),
                datas.formatarData(listaModelAlarme.get(i).getAlarme_cadastro()),
               
            });
            
        }
        
    }
        
        private void bloquearColunas(){//Impede do usuario redimensionar/mover as colunas
      jtAlarmeTabela.getTableHeader().setReorderingAllowed (false);  
    }
        
        private void funcoesDoPrograma(){
        jtfAlarmeCodigo.setEnabled(false);
        jtfAlarmeCodigo.setToolTipText("Preenchimento automático.");
    }
        
        Vector<Integer> id_Equipamento = new Vector<Integer>();
        
        
        private void salvarAlarme(){ //Salva o alarme no banco de dados
            
        try { //Pegando a data de cadastro do alarme
            modelAlarme.setAlarme_cadastro(datas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
        } catch (Exception ex) {
        }
        modelAlarme.setFk_equipamento(Integer.parseInt(jtfEquipamentoCodigo.getText()));//Setando no banco de dados o equipamento como chave estrangeira    
        modelAlarme.setAlarme_descricao(this.jtfAlarmeDescricao.getText());
        modelAlarme.setAlarme_classificao((String) this.jcAlarmeClassificao.getSelectedItem());
        if (controllerAlarme.salvarAlarmeController(modelAlarme)>0) {//verificando se registrou
            JOptionPane.showMessageDialog(this, " O Alarme foi registrado com sucesso.");
            limparcampos();
            carregarAlarme();
            habilitarCampos(false);
            jbAlarmeSalvar.setEnabled(false);
            jbAlarmeAlterar.setEnabled(true);
            jbAlarmeExcluir.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(this, " Erro ao registrar o Alarme.");
        }
    }
        
        private void alterarAlarme(){//função para alterar o alarme
        modelAlarme.setAlarme_descricao(this.jtfAlarmeDescricao.getText());
        modelAlarme.setAlarme_classificao((String) this.jcAlarmeClassificao.getSelectedItem());
        if (controllerAlarme.atualizarAlarmeController(modelAlarme)) {
            JOptionPane.showMessageDialog(this, " O Alarme foi alterado com sucesso.");
            carregarAlarme();
            limparcampos();
            habilitarCampos(false);
            
        }else{
            JOptionPane.showMessageDialog(this, " Erro ao alterar o Alarme.");
        }
    }
    
    //botao de excluir o alarme    
    private void jbAlarmeExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlarmeExcluirActionPerformed
        // TODO add your handling code here:
        int linhaSelecionada = jtAlarmeTabela.getSelectedRow();
        int codigoAlarme =(int) jtAlarmeTabela.getValueAt(linhaSelecionada, 0);
        if (controllerAlarme.excluirAlarmeController(codigoAlarme)) {
            JOptionPane.showMessageDialog(this, " O Alarme foi excluido com sucesso.");
            carregarAlarme();
        }else{
            JOptionPane.showMessageDialog(this, " Erro ao excluir o Alarme.");
        }
    }//GEN-LAST:event_jbAlarmeExcluirActionPerformed

    //preenchendo os equipamentos no combobox
    private void jcNomeEquipamentoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcNomeEquipamentoPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (jcNomeEquipamento.isPopupVisible()) {
            modelEquipamento = controllerEquipamento.getEquipamentoController(jcNomeEquipamento.getSelectedItem().toString());
            jtfEquipamentoCodigo.setText(String.valueOf(modelEquipamento.getIdEquipamento()));
        }
    }//GEN-LAST:event_jcNomeEquipamentoPopupMenuWillBecomeInvisible

    private void jcNomeEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcNomeEquipamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcNomeEquipamentoActionPerformed

    private void jtfAlarmePesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfAlarmePesquisarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfAlarmePesquisarActionPerformed

    private void jbAlarmeVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlarmeVoltarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbAlarmeVoltarActionPerformed
    //alterando o alarme no banco de dados
    private void jbAlarmeAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlarmeAlterarActionPerformed
        // TODO add your handling code here:
        int linhaSelecionada = this.jtAlarmeTabela.getSelectedRow();
        salvarAlteracao = "alterar";
        jbAlarmeSalvar.setEnabled(true);
        habilitarCampos(true);
        try {
            int codigoAlarme = (int) this.jtAlarmeTabela.getValueAt(linhaSelecionada, 0);
            modelAlarme = controllerAlarme.getAlarmeController(codigoAlarme);
            int codigoEquipamento = (int) this.jtAlarmeTabela.getValueAt(linhaSelecionada, 1);
            modelEquipamento = controllerEquipamento.getEquipamentoController(codigoEquipamento);
            this.jtfAlarmeCodigo.setText(String.valueOf(modelAlarme.getIdAlarme()));
            this.jtfEquipamentoCodigo.setText(String.valueOf(modelEquipamento.getIdEquipamento()));
            this.jtfAlarmeDescricao.setText(modelAlarme.getAlarme_descricao());
            this.jcAlarmeClassificao.setSelectedItem(modelAlarme.getAlarme_classificao());
            this.jtfEquipamentoCodigo.setText(String.valueOf(modelEquipamento.getIdEquipamento()));
            this.jcNomeEquipamento.setSelectedItem(modelEquipamento.getEquipamento_nome());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, " Erro ao alterar o Alarme.");
        }
    }//GEN-LAST:event_jbAlarmeAlterarActionPerformed

    private void jtfAlarmeDescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfAlarmeDescricaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfAlarmeDescricaoActionPerformed
    
    //função para fazer a pesquisa da descrição do alarme
    private void jbAlarmePesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlarmePesquisarActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) this.jtAlarmeTabela.getModel();
        final TableRowSorter<TableModel> classificador = new TableRowSorter<>(modelo);
        this.jtAlarmeTabela.setRowSorter(classificador);
        String textoPesquisado = jtfAlarmePesquisar.getText();
        classificador.setRowFilter(RowFilter.regexFilter(textoPesquisado.toLowerCase(), 2));
    }//GEN-LAST:event_jbAlarmePesquisarActionPerformed

    private void jtfEquipamentoCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEquipamentoCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfEquipamentoCodigoActionPerformed
    //verificando se é um novo registro ou alteração na hora de salvar
    private void jbAlarmeSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlarmeSalvarActionPerformed
        // TODO add your handling code here:
  
        jtfAlarmeCodigo.setText("");
        if (salvarAlteracao=="salvar") {
            this.salvarAlarme();
        }else if(salvarAlteracao=="alterar") {
            this.alterarAlarme();
        }

    }//GEN-LAST:event_jbAlarmeSalvarActionPerformed
    //habilitar campos ao clicar no botao novo
    private void jbAlarmeNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlarmeNovoActionPerformed
        // TODO add your handling code here:
        habilitarCampos(true);
        limparcampos();
        salvarAlteracao = "salvar";
        jbAlarmeSalvar.setEnabled(true);
        jbAlarmeAlterar.setEnabled(false);
        jbAlarmeExcluir.setEnabled(false);
    }//GEN-LAST:event_jbAlarmeNovoActionPerformed
    //cancelando o registro/alteração
    private void jbAlarmeCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlarmeCancelarActionPerformed
        // TODO add your handling code here:
        habilitarCampos(false);
        limparcampos();
        jbAlarmeAlterar.setEnabled(true);
        jbAlarmeExcluir.setEnabled(true);
        jbAlarmeSalvar.setEnabled(false);
    }//GEN-LAST:event_jbAlarmeCancelarActionPerformed

    private void jtfAlarmeCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfAlarmeCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfAlarmeCodigoActionPerformed
    
    //Pesquisando o equipamento pelo codigo e preenchendo no combobox
    private void jtfEquipamentoCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfEquipamentoCodigoFocusLost
        // TODO add your handling code here:
        modelEquipamento = controllerEquipamento.getEquipamentoController(Integer.parseInt(jtfEquipamentoCodigo.getText()));
        jcNomeEquipamento.setSelectedItem(modelEquipamento.getEquipamento_nome());
    }//GEN-LAST:event_jtfEquipamentoCodigoFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAlarmes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAlarmes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAlarmes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAlarmes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAlarmes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAlarmeAlterar;
    private javax.swing.JButton jbAlarmeCancelar;
    private javax.swing.JButton jbAlarmeExcluir;
    private javax.swing.JButton jbAlarmeNovo;
    private javax.swing.JButton jbAlarmePesquisar;
    private javax.swing.JButton jbAlarmeSalvar;
    private javax.swing.JButton jbAlarmeVoltar;
    private javax.swing.JComboBox<String> jcAlarmeClassificao;
    private componentes.UJComboBox jcNomeEquipamento;
    private javax.swing.JLabel jlEquipamentoCodigo;
    private javax.swing.JLabel jlEquipamentoCodigo1;
    private javax.swing.JLabel jlEquipamentoDescricao;
    private javax.swing.JLabel jlEquipamentoTamanho;
    private javax.swing.JTable jtAlarmeTabela;
    private javax.swing.JTextField jtfAlarmeCodigo;
    private javax.swing.JTextField jtfAlarmeDescricao;
    private javax.swing.JTextField jtfAlarmePesquisar;
    private javax.swing.JTextField jtfEquipamentoCodigo;
    // End of variables declaration//GEN-END:variables
}
